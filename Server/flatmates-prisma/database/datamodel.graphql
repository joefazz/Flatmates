type User {
    facebookUserId: String! @unique
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)
  
    email: String!
    name: String!
    firstName: String!
    lastName: String!
    birthday: String!

    gender: String!
    bio: String
    course: String
    studyYear: String
    isSmoker: Boolean
    socialScore: Int

    minPrice: Int
    maxPrice: Int

    genderPreference: String

    
    permissions: [String!]
    group: [Group!]!
    house: House
    messages: [Message!]!
    imageUrl: String!
}

# this is a chat entity
type Group {
    id: ID! @unique

    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    name: String!
    users: [User!]!
    messages: [Message!]!
}

type House {
    shortID: Int! @unique 
    road: String!
    
    # Optional system fields (remove if not needed):
    createdAt: DateTime! # read-only (managed by Graphcool)
    updatedAt: DateTime! # read-only (managed by Graphcool)

    posts: [Post!]!
    rentPrice: Int! 
    billsPrice: Int! 
    spaces: Int! 
    houseImages: [String!] 
    users: [User!]!
}

type Post {
    id: ID! @unique

    createdAt: DateTime!
    updatedAt: DateTime!

    title: String!
    description: String!
    createdBy: House!
}

type Message {
    id: ID! @unique

    createdAt: DateTime!
    
    text: String!
    from: User!
    to: Group!
}
 
type File {
    contentType: String!
    createdAt: DateTime!
    id: ID! @unique
    name: String!
    secret: String! @unique
    size: Int!
    updatedAt: DateTime!
    url: String! @unique
}

